blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::preview_site()
knitr::include_graphics("keyboard_1280.png")
knitr::include_graphics("/keyboard_1280.png")
getwd()
knitr::include_graphics("/content/post/qwerty/keyboard_1280.png")
knitr::include_graphics("~/content/post/qwerty/keyboard_1280.png")
getwd()
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
library(purrr)
N <- 26
K <- seq(6, N - 7, by = 1)
prbs <- map_dbl(K, ~ dhyper(x = 7, m = .x, n = N - .x, k = 7))
df <- data.frame(m, prbs)
library(purrr)
N <- 26
K <- seq(6, N - 7, by = 1)
prbs <- map_dbl(K, ~ dhyper(x = 7, m = .x, n = N - .x, k = 7))
df <- data.frame(K, prbs)
# prb of exact "qwerty" word sampled
pr_exact <- (1/26)*(1/25)*(1/24)*(1/23)*(1/22)**(1/21)*(1/20)*(1/19)
ggplot(df) +
geom_point(aes(x = m, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
# prb of exact "qwerty" word sampled
pr_exact <- (1/26)*(1/25)*(1/24)*(1/23)*(1/22)**(1/21)*(1/20)*(1/19)
library(ggplot2)
ggplot(df) +
geom_point(aes(x = m, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
# prb of exact "qwerty" word sampled
pr_exact <- (1/26)*(1/25)*(1/24)*(1/23)*(1/22)**(1/21)*(1/20)*(1/19)
library(ggplot2)
ggplot(df) +
geom_point(aes(x = m, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = m, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
str(df)
ggplot(df) +
geom_point(aes(x = K, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = m, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
# prb of exact "qwerty" word sampled
pr_exact <- (1/26)*(1/25)*(1/24)*(1/23)*(1/22)**(1/21)*(1/20)*(1/19)
library(ggplot2)
ggplot(df) +
geom_point(aes(x = K, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = K, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = K, labels = K) +
theme_bw()
class(df)
ggplot(df) +
geom_point(aes(x = K, y = prbs))
ggplot(df) +
geom_point(aes(x = K, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = K, y = prbs), col = 'red')
ggplot(df) +
geom_point(aes(x = K, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = K, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = K, labels = K) +
theme_bw()
library(dplyr)
ggplot(df) +
geom_point(aes(x = K, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = K, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = K, labels = K) +
theme_bw()
library(ggplot2)
library(dplyr)
# prb of exact "qwerty" word sampled - see later
pr_exact <- (1/26)*(1/25)*(1/24)*(1/23)*(1/22)**(1/21)*(1/20)*(1/19)
ggplot(df) +
geom_point(aes(x = K, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(K == "10"), aes(x = K, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = K, labels = K) +
theme_bw()
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
knit_with_parameters("~/Desktop/Website/content/post/qwerty/qwerty.Rmd")
unlink("content/post/qwerty/qwerty_cache", recursive = TRUE)
library(grid)
img <- readPNG("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
library(grid)
img <- readPNG("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
?readPNG
??readPNG
?grid.raster
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
blogdown:::serve_site()
sessionInfo()
blogdown:::serve_site()
ggplot(df) +
geom_point(aes(x = m, y = log(prbs))) +
labs(y = "Log(Probability)", x = "Top row balls") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = log(prbs)), col = 'red') +
geom_hline(yintercept = log(pr_exact), linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
m <- seq(6, 26 - 7, by = 1)
dhyper(x = 7, m = 10, n = 26 - 10, k = 7, log = FALSE)
dhyper(x = 4, m = 5, n = 45, k = 10, log = FALSE)
prbs <- map_dbl(m, ~ dhyper(x = 7, m = .x, n = 26 - .x, k = 7))
library(purrr)
X <- c(10, 9, 8, 7)
map(X, calc_prbs, Z = Z, n = n)
# hypergeomtric
m <- seq(6, 26 - 7, by = 1)
dhyper(x = 7, m = 10, n = 26 - 10, k = 7, log = FALSE)
dhyper(x = 4, m = 5, n = 45, k = 10, log = FALSE)
prbs <- map_dbl(m, ~ dhyper(x = 7, m = .x, n = 26 - .x, k = 7))
df <- data.frame(m, prbs)
# prb of exact "qwerty" word sampled
pr_exact <- (1/26)*(1/25)*(1/24)*(1/23)*(1/22)**(1/21)*(1/20)*(1/19)
ggplot(df) +
geom_point(aes(x = m, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
ggplot(df) +
geom_point(aes(x = m, y = log(prbs))) +
labs(y = "Log(Probability)", x = "Top row balls") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = log(prbs)), col = 'red') +
geom_hline(yintercept = log(pr_exact), linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
library(ggplot2)
ggplot(df) +
geom_point(aes(x = m, y = log(prbs))) +
labs(y = "Log(Probability)", x = "Top row balls") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = log(prbs)), col = 'red') +
geom_hline(yintercept = log(pr_exact), linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
str(df)
ggplot(df) +
geom_point(aes(x = m, y = prbs)) +
labs(y = "Probability", x = "K") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = prbs), col = 'red') +
geom_hline(yintercept = pr_exact, linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
ggplot(df) +
geom_point(aes(x = m, y = log(prbs))) +
labs(y = "Log(Probability)", x = "Top row balls")
library(dplyr)
ggplot(df) +
geom_point(aes(x = m, y = log(prbs))) +
labs(y = "Log(Probability)", x = "Top row balls") +
geom_point(data = df %>% filter(m == "10"), aes(x = m, y = log(prbs)), col = 'red') +
geom_hline(yintercept = log(pr_exact), linetype = "dashed") +
scale_x_continuous(breaks = m, labels = m) +
theme_bw()
knitr::include_graphics("/Users/work/Desktop/Website/content/post/qwerty/keyboard_1280.png")
blogdown:::serve_site()
blogdown:::serve_site()
library(purrr)
N <- 26
K <- seq(6, N - 7, by = 1)
prbs <- map_dbl(K, ~ dhyper(x = 7, m = .x, n = N - .x, k = 7))
df <- data.frame(K, prbs)
str(df)
df %>% filter(K == 16)
df %>% filter(K = 16)
df
df
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
# helper functions - each one calculates one of the steps 2-5
f2 <- function(x) (x + 9) * 2 # calculates step 2
f3 <- function(x) (x * 6) + 12 # calculates step 3
f4 <- function(x) x - 60 # calculates step 4
f5 <- function(x) (x / 12) - 4 # calculates step 5
magic_trick <- function(x, rep = 0){
# x: a whole number from 1 to 50
# rep: the step 2-5 to be repeated twice. If rep = 0 or 1. - no repetition
if(rep == 2){
f <- f5(f4(f3(f2(f2(x)))))
} else if(rep == 3){
f <- f5(f4(f3(f3(f2(x)))))
} else if(rep == 4){
f <- f5(f4(f4(f3(f2(x)))))
} else if(rep == 5) {
f <- f5(f5(f4(f3(f2(x)))))
}
else{
f <- f5(f4(f3(f2(x)))) - x
}
return(f)
}
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
library(purrr)
library(ggplot2)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick_original)
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
library(purrr)
library(ggplot2)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated")) %>%
ggplot(.) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", lwd = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
library(purrr)
library(dplyr)
library(ggplot2)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated")) %>%
ggplot(.) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", lwd = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
library(purrr)
library(dplyr)
library(ggplot2)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated")) %>%
ggplot(.) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", linewidth = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
ggplot(df) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", linewidth = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated"))
ggplot(df) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", linewidth = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
# helper functions - each one calculates one of the steps 2-5
f2 <- function(x) (x + 9) * 2 # calculates step 2
f3 <- function(x) (x * 6) + 12 # calculates step 3
f4 <- function(x) x - 60 # calculates step 4
f5 <- function(x) (x / 12) - 4 # calculates step 5
magic_trick <- function(x, rep = 0){
# x: a whole number from 1 to 50
# rep: the step 2-5 to be repeated twice. If rep = 0 or 1. - no repetition
if(rep == 2){
f <- f5(f4(f3(f2(f2(x)))))
} else if(rep == 3){
f <- f5(f4(f3(f3(f2(x)))))
} else if(rep == 4){
f <- f5(f4(f4(f3(f2(x)))))
} else if(rep == 5) {
f <- f5(f5(f4(f3(f2(x)))))
}
else{
f <- f5(f4(f3(f2(x)))) - x
}
return(f)
}
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
library(purrr)
library(dplyr)
library(ggplot2)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated"))
ggplot(df) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", linewidth = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
blogdown:::serve_site()
blogdown:::serve_site()
str(df)
library(purrr)
library(dplyr)
library(ggplot2)
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
# helper functions - each one calculates one of the steps 2-5
f2 <- function(x) (x + 9) * 2 # calculates step 2
f3 <- function(x) (x * 6) + 12 # calculates step 3
f4 <- function(x) x - 60 # calculates step 4
f5 <- function(x) (x / 12) - 4 # calculates step 5
magic_trick <- function(x, rep = 0){
# x: a whole number from 1 to 50
# rep: the step 2-5 to be repeated twice. If rep = 0 or 1. - no repetition
if(rep == 2){
f <- f5(f4(f3(f2(f2(x)))))
} else if(rep == 3){
f <- f5(f4(f3(f3(f2(x)))))
} else if(rep == 4){
f <- f5(f4(f4(f3(f2(x)))))
} else if(rep == 5) {
f <- f5(f5(f4(f3(f2(x)))))
} else {
f <- f5(f4(f3(f2(x)))) - x
}
return(f)
}
str(df)
library(purrr)
library(dplyr)
library(ggplot2)
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated"))
ggplot(df) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", linewidth = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
str(df)
df %>% filter(repeated == "step 5 repeated")
magic_trick(seq(50:70, by = 1), rep = 5)
magic_trick(seq(50, 70, by = 1), rep = 5)
seq(50, 70, by = 1)
seq(50, 70, by = 1)[10]
magic_trick(seq(58, 60, by = 1), rep = 5)
magic_trick(seq(4, 6, by = 1), rep = 5)
magic_trick(seq(4, 6, by = 1), rep = 4)
blogdown:::serve_site()
# helper functions - each one calculates one of the steps 2-5
f2 <- function(x) (x + 9) * 2 # calculates step 2
f3 <- function(x) (x * 6) + 12 # calculates step 3
f4 <- function(x) x - 60 # calculates step 4
f5 <- function(x) (x / 12) - 4 # calculates step 5
magic_trick <- function(x, rep = 0){
# x: a whole number from 1 to 50
# rep: the step 2-5 to be repeated twice. If rep = 0 or 1. - no repetition
if(rep == 2){
f <- f5(f4(f3(f2(f2(x)))))
} else if(rep == 3){
f <- f5(f4(f3(f3(f2(x)))))
} else if(rep == 4){
f <- f5(f4(f4(f3(f2(x)))))
} else if(rep == 5) {
f <- f5(f5(f4(f3(f2(x)))))
} else {
f <- f5(f4(f3(f2(x)))) - x
}
return(f)
}
f5(f4(f4(f3(f2(5)))))
f2(5)
f3(f2(5))
f4(f3(f2(69)))
4*12
12*12
144*12
1728-48
1728+48
f5(f4(f3(f2(69))))
f5(f5(f4(f3(f2(69)))))
# helper functions - each one calculates one of the steps 2-5
f2 <- function(x) (x + 9) * 2 # calculates step 2
f3 <- function(x) (x * 6) + 12 # calculates step 3
f4 <- function(x) x - 60 # calculates step 4
f5 <- function(x) (x / 12) - 4 # calculates step 5
magic_trick <- function(x, rep = 0){
# x: a whole number from 1 to 50
# rep: the step 2-5 to be repeated twice. If rep = 0 or 1. - no repetition
if(rep == 2){
f <- f5(f4(f3(f2(f2(x)))))
} else if(rep == 3){
f <- f5(f4(f3(f3(f2(x)))))
} else if(rep == 4){
f <- f5(f4(f4(f3(f2(x)))))
} else if(rep == 5) {
f <- f5(f5(f4(f3(f2(x)))))
} else {
f <- f5(f4(f3(f2(x)))) - x
}
return(f)
}
magic_trick(seq(60, 70, by = 1, rep = 5))
magic_trick(seq(60, 70, by = 1), rep = 5))
magic_trick(seq(60, 70, by = 1), rep = 5)
magic_trick(seq(50, 70, by = 1), rep = 5)
magic_trick(seq(50, 60, by = 1), rep = 5)
magic_trick(59, rep = 5)
f4(f3(f2(59)))
library(purrr)
library(dplyr)
library(ggplot2)
x_values <- seq(1, 50, by = 1) # step 1: whole number from 1 to 50.
repeated <- c(0, 2, 3, 4, 5) # step to repeat. 0 corresponds to the original puzzle
vals <- expand.grid(x_values, repeated)
res <- map2_dbl(vals$Var1, vals$Var2, magic_trick)
df <- data.frame(x = rep(x_values, 5), repeated = rep(repeated, each = 50), res = res) %>%
mutate(repeated = paste0("step ", repeated, " repeated"))
ggplot(df) +
geom_point(aes(x = x, y = res)) +
facet_wrap(. ~ repeated, scales = "free") +
geom_hline(yintercept = 1, linetype = "dashed", linewidth = 1.7, col = "#009E73") +
labs(y = "Result at step 7") +
theme_linedraw(12) +
theme(strip.background = element_rect(fill = "white")) +
theme(strip.text.x = element_text(color = "black"))
str(res)
magic_trick(x_values, rep = 4)
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::check_site()
install.packages("kableExtra")
install.packages("ggsn")
blogdown::build_site(build_rmd = 'timestamp')
blogdown::check_site()
blogdown::find_hugo('all')
blogdown::config_Rprofile()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::new_post()
blogdown::new_post("trial")
blogdown::new_post(title="article-r", author="Me",
categories=c("data-science", "stats"),
date=Sys.Date(),
tags=NULL,
ext=".Rmd")
blogdown:::serve_site()
