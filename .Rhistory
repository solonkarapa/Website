}
}
return(out)
}
##### add restrictions
# 1: select only the ones where blue is the smallest doll
blue_smallest_doll <- which(perms[,5] == "blue_5") # blue is the smallest doll
perms2 <- perms[blue_smallest_doll,]
# 2: select only the combinations where each colour appears once and indexes are sorted correctly
combinations <- matrix( # simplify into a matrix
unlist( # simplify output of map()
map(1:nrow(perms2), my_fun, data = perms2)), # apply my_fun to all rows of perms2
ncol = 5, byrow = TRUE)
combinations
##### 1st interpretation
# no yellow doll contains a green doll with a pink inside it
pattern_yellow_green_pink <- ("yellow" %R% zero_or_more(WRD) %R% "green" %R% zero_or_more(WRD) %R% "pink")
combinations_update1 <- matrix(
unlist(
map(1:nrow(combinations_update), my_fun, data = combinations_update, pattern = pattern_yellow_green_pink)),
ncol = 5, byrow = TRUE)
# 3: apply first restriction
# no doll contains a pink with a red doll anywhere within it
pattern_pink_red <- ("pink" %R% zero_or_more(WRD) %R% "red")
combinations_update <- matrix(
unlist(
map(1:nrow(combinations), my_fun, data = combinations, pattern = pattern_pink_red)),
ncol = 5, byrow = TRUE)
combinations_update
##### 1st interpretation
# no yellow doll contains a green doll with a pink inside it
pattern_yellow_green_pink <- ("yellow" %R% zero_or_more(WRD) %R% "green" %R% zero_or_more(WRD) %R% "pink")
combinations_update1 <- matrix(
unlist(
map(1:nrow(combinations_update), my_fun, data = combinations_update, pattern = pattern_yellow_green_pink)),
ncol = 5, byrow = TRUE)
combinations_update1
##### 2nd interpretation
# no green doll with a pink doll anywhere within it
pattern_green_pink <- ("green" %R% zero_or_more(WRD) %R% "pink")
combinations_update2 <- matrix(
unlist(
map(1:nrow(combinations_update), my_fun, data = combinations_update, pattern = or(pattern_yellow_green_pink, pattern_green_pink))),
ncol = 5, byrow = TRUE)
combinations_update2
#### 3rd interpretation
pattern_yellow_green<- ("yellow" %R% zero_or_more(WRD) %R% "green")
combinations_update3 <- matrix(
unlist(
map(1:nrow(combinations_update), my_fun, data = combinations_update, pattern = or(pattern_yellow_green_pink, pattern_green_pink, pattern_yellow_green))),
ncol = 5, byrow = TRUE)
combinations_update3
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
bananaindex <- read.csv("~/Downloads/bananaindex.csv")
View(bananaindex)
colnames(bananaindex)
library(dplyr)
bananaindex %>% mutate(mine_banana_kg = emissions_kg/X[1])
bananaindex %>% filter(entity == "Bananas")
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
library(ggplot2)
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
ggplot(banana_index) +
geom_point(aes(x = Bananas.index..kg., y = emissions_kg))
ggplot(banana_index) +
geom_point(aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.))
?geom_text
ggplot(banana_index) +
geom_point(aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_text(aes(label = entity))
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_text(aes(label = entity))
library(ggrepel)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
colnames(banana_index)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = NULL, size = land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = Bananas.index..land_use_kg, size = land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = entity, size = land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = log(land_use_kg), size = land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = entity, size = land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = entity)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = land_use_kg + rnorm(1))) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = land_use_kg + rnorm(1))) +
geom_dotplot()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = Bananas.index..land_use_kg + rnorm(1))) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = Bananas.index..land_use_kg)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 2)) +
geom_point()
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 2)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 2, size = log(land_use_kg))) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 2, size = land_use_kg)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = jiiter(1), size = land_use_kg)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = jiter(1), size = land_use_kg)) +
geom_point() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg)) +
geom_point() +
position_jitter() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg)) +
geom_point() +
geom_jitter() +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg)) +
geom_point() +
geom_jitter(width = 0, height = 0.1) +
geom_text_repel(aes(label = entity),
size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg)) +
geom_point() +
geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) +
geom_text_repel(aes(label = entity),
size = 3.5)
banana_index %>% filter(Bananas.index..land_use_kg > 150)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg, label = entity)) +
geom_point() +
geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) +
geom_text_repel(size = 3.5)
banana_index %>% filter(Bananas.index..land_use_kg > 150)
banana_index %>% filter(Bananas.index..land_use_kg > 150)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, size = land_use_kg, label = entity)) +
geom_point() +
geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) #+
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
geom_point() +
geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) #+
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
geom_point() +
geom_jitter(position = position_jitter(width = 0, height = 0.1)) #+
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
geom_point() +
geom_jitter(position = position_jitter(width = 0, height = 0.01)) #+
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
#geom_point() +
geom_jitter(position = position_jitter(width = 0, height = 0.01)) #+
geom_text_repel(size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
#geom_point() +
geom_jitter(position = position_jitter(width = 0, height = 0.01)) +
geom_text_repel(size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
#geom_point() +
geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
ggplot(banana_index, aes(x = Bananas.index..land_use_kg, y = 1, label = entity)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
## plot land use
banana_index %>% mutate(y = 0 + rnorm(1, sd = 2)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
## plot land use
banana_index %>% mutate(y = 0 + rnorm(1, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
## plot land use
banana_index %>% mutate(y = 0 * rnorm(1, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
nrow(banana_index)
## plot land use
banana_index %>% mutate(y = 0 * rnorm(160, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
## plot land use
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg) +
## plot land use
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
## plot land use
set.seed(100)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
bananaindex %>% filter(entity == "Bananas")
banana_index %>% arrange(desc(land_use_kg))
banana_index %>% arrange(land_use_kg)
banana_index %>% arrange(land_use_kg) %>% head()
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1)
log(1)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = post5ition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = post5ition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
#
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
?geom_hline
#
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
str(banana_index)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
#
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
#
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..land_use_1000kcal, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
colnames(banana_index)
# emission vs land use
ggplot(banana_index, aes(x = Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kca)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use
ggplot(banana_index, aes(x = Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
colnames(banana_index)
# emission vs land use 1
ggplot(banana_index, aes(x = Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..land_use_1000kcal, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
colnames(banana_index)
ggplot(banana_index, aes(x = Bananas.index..land_use_1000kcal, y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..100g.protein., y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
