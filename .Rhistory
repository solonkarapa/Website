blogdown:::serve_site()
load("~/Box Sync/Box Sync/Website6/.RData")
blogdown:::serve_site()
blogdown:::new_post_addin()
library("titanic")
data("Titanic")
library("titanic")
data("Titanic")
str(Titanic)
devtools::session_info('blogdown')
yaml::as.yaml
blogdown:::new_post_addin()
blogdown:::serve_site()
sessionInfo()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
install.packages('later')
blogdown:::serve_site()
install.packages(c("processx", "later"))
options(blogdown.generator.server = TRUE)
install.packages(c("processx", "later"))
blogdown:::serve_site()
blogdown::build_site(local = TRUE)
blogdown::serve_site(local = TRUE)
blogdown::update_hugo()
blogdown:::serve_site()
getwd()
devtools::session_info('blogdown')
list.files('content', '.Rmd$', full.names = TRUE, recursive = TRUE)
if (file.exists("~/.Rprofile")) {
base::sys.source("~/.Rprofile", envir = environment())
}
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
5+5
blogdown:::serve_site()
(1/40000)*10000- 45
((1/40000)*10000)- 45
((1/40000)*10000)- 0.45
blogdown:::serve_site()
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
library(vegan)
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
library(ape)
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# not used intitially
#PlasticWaste = data.frame(read.table('PlasticWaste.csv',header=T,sep=','))
TransectLengths = data.frame(read.table('~/Desktop/CoralReefs/TRANSECT_LENGTH_FINAL.csv',
header = T, sep = ','))
# Data Formatting ---------------------------------------------------------
#Create a summed dataset at the transect level while keeping track of plastic and disease presence jointly
SumNoPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==0),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
SumPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA,Plastic)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==1),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
colnames(SumPlastic)<- c('Site_No', 'Tran', 'Reef_Name','Year','Sector','Country', 'Season', 'Group.Code','Trip.code','Healthy.P','WS.P','BBD.P','BrB.P','SEB.P','AtN.P','GA.P','Plastic')
SummedPlastic<-merge(SumNoPlastic,SumPlastic,all=T)
TransectLengths$ID=paste(TransectLengths$Site.Name,TransectLengths$Transect)
SummedPlastic$ID=paste(SummedPlastic$Reef_Name,SummedPlastic$Tran)
SummedPlastic$T_length=TransectLengths$LIT.Transect.length_m[match(SummedPlastic$ID,TransectLengths$ID)]
SummedPlastic$Corals.NoPlastic=SummedPlastic$Healthy+SummedPlastic$WS+SummedPlastic$BBD+SummedPlastic$BrB+SummedPlastic$SEB+SummedPlastic$AtN+SummedPlastic$GA
SummedPlastic$Disease.NoPlastic=rowSums(SummedPlastic[,11:16],na.rm=T)
SummedPlastic$Plastic.Corals=rowSums(SummedPlastic[,17:23],na.rm=T)
SummedPlastic$Disease.Plastic=rowSums(SummedPlastic[,18:21],na.rm=T)
SummedPlastic$Sector=factor(SummedPlastic$Sector,levels = c('MYANMAR','KOH TAO','SULAWESI','BALI','PAPUA','PALMS','WH','KEPPELS'))
Plastic$ID<- paste(Plastic$Reef_Name,Plastic$Tran)
Plastic$T_length=TransectLengths$LIT.Transect.length_m[match(Plastic$ID,TransectLengths$ID)]
#Create summary tables to find mean levels of disease at the site level and find the minimum and maximum for the different sectors
summarydata=aggregate(cbind(Disease.NoPlastic/Corals.NoPlastic,Disease.Plastic/Plastic.Corals,Plastic/T_length/2*50)~Sector+Reef_Name,data = SummedPlastic,FUN='mean')
summarydata2=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='min')
summarydata3=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='max')
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# not used intitially
#PlasticWaste = data.frame(read.table('PlasticWaste.csv',header=T,sep=','))
TransectLengths = data.frame(read.table('~/Desktop/CoralReefs/TRANSECT_LENGTH_FINAL.csv',
header = T, sep = ','))
# Data Formatting ---------------------------------------------------------
#Create a summed dataset at the transect level while keeping track of plastic and disease presence jointly
SumNoPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==0),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
SumPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA,Plastic)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==1),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
colnames(SumPlastic)<- c('Site_No', 'Tran', 'Reef_Name','Year','Sector','Country', 'Season', 'Group.Code','Trip.code','Healthy.P','WS.P','BBD.P','BrB.P','SEB.P','AtN.P','GA.P','Plastic')
SummedPlastic<-merge(SumNoPlastic,SumPlastic,all=T)
TransectLengths$ID=paste(TransectLengths$Site.Name,TransectLengths$Transect)
SummedPlastic$ID=paste(SummedPlastic$Reef_Name,SummedPlastic$Tran)
SummedPlastic$T_length=TransectLengths$LIT.Transect.length_m[match(SummedPlastic$ID,TransectLengths$ID)]
SummedPlastic$Corals.NoPlastic=SummedPlastic$Healthy+SummedPlastic$WS+SummedPlastic$BBD+SummedPlastic$BrB+SummedPlastic$SEB+SummedPlastic$AtN+SummedPlastic$GA
SummedPlastic$Disease.NoPlastic=rowSums(SummedPlastic[,11:16],na.rm=T)
SummedPlastic$Plastic.Corals=rowSums(SummedPlastic[,17:23],na.rm=T)
SummedPlastic$Disease.Plastic=rowSums(SummedPlastic[,18:21],na.rm=T)
SummedPlastic$Sector=factor(SummedPlastic$Sector,levels = c('MYANMAR','KOH TAO','SULAWESI','BALI','PAPUA','PALMS','WH','KEPPELS'))
Plastic$ID<- paste(Plastic$Reef_Name,Plastic$Tran)
Plastic$T_length=TransectLengths$LIT.Transect.length_m[match(Plastic$ID,TransectLengths$ID)]
#Create summary tables to find mean levels of disease at the site level and find the minimum and maximum for the different sectors
summarydata=aggregate(cbind(Disease.NoPlastic/Corals.NoPlastic,Disease.Plastic/Plastic.Corals,Plastic/T_length/2*50)~Sector+Reef_Name,data = SummedPlastic,FUN='mean')
summarydata2=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='min')
summarydata3=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='max')
# GLMM PDF, Disease levels by Plastic Debris for Branching -----------------------------
Branch.Disease = glmer(Disease ~ Plastic + (1|Reef_Name),
data = Plastic[which(Plastic$Growth2=='Branching'),],
family = 'binomial',
control = glmerControl(optimizer ="bobyqa"))
# Branch.Disease.Null = glmer(Disease~1+(1|Reef_Name),
#                             data=Plastic[which(Plastic$Growth2=='Branching'),],
#                             family='binomial',
#                             control = glmerControl(optimizer ="bobyqa"))
# anova(Branch.Disease, Branch.Disease.Null, test = 'lrt')
# AIC(Branch.Disease, Branch.Disease.Null)
# ModSelBranch = model.sel(Branch.Disease,Branch.Disease.Null)
#write.table(ModSelBranch, "Branch_Comp_ModelTable.csv", col.names = TRUE, row.names = FALSE, sep = ',')
#Generate data for the creation of a smooth probability density curve based on model results
Branch = data.frame(Normal = rnorm(100000, mean = -3.6208, sd =.1184),
Plastic= rnorm(100000, mean = -3.6208 + 5.8871, sd = sqrt(.1184^2 + .278^2)))
Branch$Normalbt = plogis(Branch$Normal)
Branch$Plasticbt = plogis(Branch$Plastic)
Branch = gather(Branch, Condition, Estimate, Normalbt:Plasticbt)
#Branch$Relative = Branch$Estimate/plogis(-3.6208)
ggplot(aes(x = Estimate*100), data = Branch) +
geom_density(aes(y = ..scaled.., fill = Condition)) +
scale_x_continuous(limits = c(0, 100)) +
geom_rug(aes(color = Condition),
data = Branch[seq(from = 1,to = length(Branch$Estimate), by = 500),])
library(merTools)
sim_rfs_Branch.Disease <- REsim(Branch.Disease, n.sims = 200)
plotREsim(sim_rfs_Branch.Disease)
blogdown:::serve_site()
2+2
blogdown:::serve_site()
install.packages('yaml')
blogdown:::serve_site()
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# not used intitially
#PlasticWaste = data.frame(read.table('PlasticWaste.csv',header=T,sep=','))
TransectLengths = data.frame(read.table('~/Desktop/CoralReefs/TRANSECT_LENGTH_FINAL.csv',
header = T, sep = ','))
# Data Formatting ---------------------------------------------------------
#Create a summed dataset at the transect level while keeping track of plastic and disease presence jointly
SumNoPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==0),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
SumPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA,Plastic)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==1),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
colnames(SumPlastic)<- c('Site_No', 'Tran', 'Reef_Name','Year','Sector','Country', 'Season', 'Group.Code','Trip.code','Healthy.P','WS.P','BBD.P','BrB.P','SEB.P','AtN.P','GA.P','Plastic')
SummedPlastic<-merge(SumNoPlastic,SumPlastic,all=T)
TransectLengths$ID=paste(TransectLengths$Site.Name,TransectLengths$Transect)
SummedPlastic$ID=paste(SummedPlastic$Reef_Name,SummedPlastic$Tran)
SummedPlastic$T_length=TransectLengths$LIT.Transect.length_m[match(SummedPlastic$ID,TransectLengths$ID)]
SummedPlastic$Corals.NoPlastic=SummedPlastic$Healthy+SummedPlastic$WS+SummedPlastic$BBD+SummedPlastic$BrB+SummedPlastic$SEB+SummedPlastic$AtN+SummedPlastic$GA
SummedPlastic$Disease.NoPlastic=rowSums(SummedPlastic[,11:16],na.rm=T)
SummedPlastic$Plastic.Corals=rowSums(SummedPlastic[,17:23],na.rm=T)
SummedPlastic$Disease.Plastic=rowSums(SummedPlastic[,18:21],na.rm=T)
SummedPlastic$Sector=factor(SummedPlastic$Sector,levels = c('MYANMAR','KOH TAO','SULAWESI','BALI','PAPUA','PALMS','WH','KEPPELS'))
Plastic$ID<- paste(Plastic$Reef_Name,Plastic$Tran)
Plastic$T_length=TransectLengths$LIT.Transect.length_m[match(Plastic$ID,TransectLengths$ID)]
#Create summary tables to find mean levels of disease at the site level and find the minimum and maximum for the different sectors
summarydata=aggregate(cbind(Disease.NoPlastic/Corals.NoPlastic,Disease.Plastic/Plastic.Corals,Plastic/T_length/2*50)~Sector+Reef_Name,data = SummedPlastic,FUN='mean')
summarydata2=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='min')
summarydata3=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='max')
Normal.Disease.Growth = glmer(Disease ~ -1 + Growth2+(1|Reef_Name),
data = Plastic[which(Plastic$Plastic==0),],
family = 'binomial',
control = glmerControl(optimizer ="bobyqa"))
summary(Normal.Disease.Growth)
# PDF, Baseline disease levels by growth form -----------------------------
NormalDisease.by.Growth = data.frame(Tabular = rnorm(100000, mean = -3.1332, sd = .1549),
Massive = rnorm(100000, mean = -3.8153, sd = .1095),
Branching = rnorm(100000, mean = -3.5534, sd = .1103))
NormalDisease.by.Growth$Tabularbt = plogis(NormalDisease.by.Growth$Tabular)
NormalDisease.by.Growth$Massivebt = plogis(NormalDisease.by.Growth$Massive)
NormalDisease.by.Growth$Branchingbt = plogis(NormalDisease.by.Growth$Branching)
NormalDisease.by.Growth = gather(NormalDisease.by.Growth, Growth, Estimate, Tabularbt:Branchingbt)
#NormalDisease.by.Growth$Relative=NormalDisease.by.Growth$Estimate/plogis(-3.8153)
ggplot(aes(x=Estimate*100), data = NormalDisease.by.Growth) +
geom_density(aes(y=..scaled..,fill=Growth)) +
scale_x_continuous(limits=c(0,10))+
geom_rug(aes(color=Growth), data=NormalDisease.by.Growth[seq(from=1,to=length(NormalDisease.by.Growth$Estimate),by=500),])
library(merTools)
str(sleepstudy)
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# not used intitially
#PlasticWaste = data.frame(read.table('PlasticWaste.csv',header=T,sep=','))
TransectLengths = data.frame(read.table('~/Desktop/CoralReefs/TRANSECT_LENGTH_FINAL.csv',
header = T, sep = ','))
# Data Formatting ---------------------------------------------------------
#Create a summed dataset at the transect level while keeping track of plastic and disease presence jointly
SumNoPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==0),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
SumPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA,Plastic)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==1),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
colnames(SumPlastic)<- c('Site_No', 'Tran', 'Reef_Name','Year','Sector','Country', 'Season', 'Group.Code','Trip.code','Healthy.P','WS.P','BBD.P','BrB.P','SEB.P','AtN.P','GA.P','Plastic')
SummedPlastic<-merge(SumNoPlastic,SumPlastic,all=T)
TransectLengths$ID=paste(TransectLengths$Site.Name,TransectLengths$Transect)
SummedPlastic$ID=paste(SummedPlastic$Reef_Name,SummedPlastic$Tran)
SummedPlastic$T_length=TransectLengths$LIT.Transect.length_m[match(SummedPlastic$ID,TransectLengths$ID)]
SummedPlastic$Corals.NoPlastic=SummedPlastic$Healthy+SummedPlastic$WS+SummedPlastic$BBD+SummedPlastic$BrB+SummedPlastic$SEB+SummedPlastic$AtN+SummedPlastic$GA
SummedPlastic$Disease.NoPlastic=rowSums(SummedPlastic[,11:16],na.rm=T)
SummedPlastic$Plastic.Corals=rowSums(SummedPlastic[,17:23],na.rm=T)
SummedPlastic$Disease.Plastic=rowSums(SummedPlastic[,18:21],na.rm=T)
SummedPlastic$Sector=factor(SummedPlastic$Sector,levels = c('MYANMAR','KOH TAO','SULAWESI','BALI','PAPUA','PALMS','WH','KEPPELS'))
Plastic$ID<- paste(Plastic$Reef_Name,Plastic$Tran)
Plastic$T_length=TransectLengths$LIT.Transect.length_m[match(Plastic$ID,TransectLengths$ID)]
#Create summary tables to find mean levels of disease at the site level and find the minimum and maximum for the different sectors
summarydata=aggregate(cbind(Disease.NoPlastic/Corals.NoPlastic,Disease.Plastic/Plastic.Corals,Plastic/T_length/2*50)~Sector+Reef_Name,data = SummedPlastic,FUN='mean')
summarydata2=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='min')
summarydata3=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='max')
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# not used intitially
#PlasticWaste = data.frame(read.table('PlasticWaste.csv',header=T,sep=','))
TransectLengths = data.frame(read.table('~/Desktop/CoralReefs/TRANSECT_LENGTH_FINAL.csv',
header = T, sep = ','))
# Data Formatting ---------------------------------------------------------
#Create a summed dataset at the transect level while keeping track of plastic and disease presence jointly
SumNoPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==0),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
SumPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA,Plastic)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==1),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
colnames(SumPlastic)<- c('Site_No', 'Tran', 'Reef_Name','Year','Sector','Country', 'Season', 'Group.Code','Trip.code','Healthy.P','WS.P','BBD.P','BrB.P','SEB.P','AtN.P','GA.P','Plastic')
SummedPlastic<-merge(SumNoPlastic,SumPlastic,all=T)
TransectLengths$ID=paste(TransectLengths$Site.Name,TransectLengths$Transect)
SummedPlastic$ID=paste(SummedPlastic$Reef_Name,SummedPlastic$Tran)
SummedPlastic$T_length=TransectLengths$LIT.Transect.length_m[match(SummedPlastic$ID,TransectLengths$ID)]
SummedPlastic$Corals.NoPlastic=SummedPlastic$Healthy+SummedPlastic$WS+SummedPlastic$BBD+SummedPlastic$BrB+SummedPlastic$SEB+SummedPlastic$AtN+SummedPlastic$GA
SummedPlastic$Disease.NoPlastic=rowSums(SummedPlastic[,11:16],na.rm=T)
SummedPlastic$Plastic.Corals=rowSums(SummedPlastic[,17:23],na.rm=T)
SummedPlastic$Disease.Plastic=rowSums(SummedPlastic[,18:21],na.rm=T)
SummedPlastic$Sector=factor(SummedPlastic$Sector,levels = c('MYANMAR','KOH TAO','SULAWESI','BALI','PAPUA','PALMS','WH','KEPPELS'))
Plastic$ID<- paste(Plastic$Reef_Name,Plastic$Tran)
Plastic$T_length=TransectLengths$LIT.Transect.length_m[match(Plastic$ID,TransectLengths$ID)]
#Create summary tables to find mean levels of disease at the site level and find the minimum and maximum for the different sectors
summarydata=aggregate(cbind(Disease.NoPlastic/Corals.NoPlastic,Disease.Plastic/Plastic.Corals,Plastic/T_length/2*50)~Sector+Reef_Name,data = SummedPlastic,FUN='mean')
summarydata2=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='min')
summarydata3=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='max')
# GLMM PDF, Disease levels by Plastic Debris for Branching -----------------------------
Branch.Disease = glmer(Disease ~ Plastic + (1|Reef_Name),
data = Plastic[which(Plastic$Growth2=='Branching'),],
family = 'binomial',
control = glmerControl(optimizer ="bobyqa"))
# Branch.Disease.Null = glmer(Disease~1+(1|Reef_Name),
#                             data=Plastic[which(Plastic$Growth2=='Branching'),],
#                             family='binomial',
#                             control = glmerControl(optimizer ="bobyqa"))
# anova(Branch.Disease, Branch.Disease.Null, test = 'lrt')
# AIC(Branch.Disease, Branch.Disease.Null)
# ModSelBranch = model.sel(Branch.Disease,Branch.Disease.Null)
#write.table(ModSelBranch, "Branch_Comp_ModelTable.csv", col.names = TRUE, row.names = FALSE, sep = ',')
# Generate data for the creation of a smooth probability density curve based on model results
Branch = data.frame(Normal = rnorm(100000, mean = -3.6208, sd =.1184),
Plastic= rnorm(100000, mean = -3.6208 + 5.8871, sd = sqrt(.1184^2 + .278^2)))
Branch$Normalbt = plogis(Branch$Normal)
Branch$Plasticbt = plogis(Branch$Plastic)
Branch = gather(Branch, Condition, Estimate, Normalbt:Plasticbt)
#Branch$Relative = Branch$Estimate/plogis(-3.6208)
ggplot(aes(x = Estimate*100), data = Branch) +
geom_density(aes(y = ..scaled.., fill = Condition)) +
scale_x_continuous(limits = c(0, 100)) +
geom_rug(aes(color = Condition),
data = Branch[seq(from = 1,to = length(Branch$Estimate), by = 500),])
library(merTools)
sim_rfs_Branch.Disease <- REsim(Branch.Disease, n.sims = 200)
plotREsim(sim_rfs_Branch.Disease)
# GLMM, Baseline Disease levels for different growth forms, Asia Pacific --------
Normal.Disease.Growth = glmer(Disease ~ -1 + Growth2+(1|Reef_Name),
data = Plastic[which(Plastic$Plastic==0),],
family = 'binomial',
control = glmerControl(optimizer ="bobyqa"))
# PDF, Baseline disease levels by growth form -----------------------------
NormalDisease.by.Growth = data.frame(Tabular = rnorm(100000, mean = -3.1332, sd = .1549),
Massive = rnorm(100000, mean = -3.8153, sd = .1095),
Branching = rnorm(100000, mean = -3.5534, sd = .1103))
NormalDisease.by.Growth$Tabularbt = plogis(NormalDisease.by.Growth$Tabular)
NormalDisease.by.Growth$Massivebt = plogis(NormalDisease.by.Growth$Massive)
NormalDisease.by.Growth$Branchingbt = plogis(NormalDisease.by.Growth$Branching)
NormalDisease.by.Growth = gather(NormalDisease.by.Growth, Growth, Estimate, Tabularbt:Branchingbt)
#NormalDisease.by.Growth$Relative=NormalDisease.by.Growth$Estimate/plogis(-3.8153)
ggplot(aes(x=Estimate*100), data = NormalDisease.by.Growth) +
geom_density(aes(y=..scaled..,fill = Growth)) +
scale_x_continuous(limits = c(0, 10))
#+
#   geom_rug(aes(color = Growth), #data=NormalDisease.by.Growth[seq(from=1,to=length(NormalDisease.by.Growth$Estimate),by=500),])
library(merTools)
sim_rfs_Normal.Disease <- REsim(Normal.Disease.Growth, n.sims = 200)
plotREsim(sim_rfs_Normal.Disease)
quantile0.9 <- REquantile(Normal.Disease.Growth, quantile = 0.9, groupFctr = "Reef_Name")
which(sim_rfs_Normal.Disease$groupID == quantile0.9)
sim_rfs_Normal.Disease[which(sim_rfs_Normal.Disease$groupID == quantile0.9), ]
quantile0.9
quantile0.9 <- REquantile(Normal.Disease.Growth, quantile = 0.9, groupFctr = "Reef_Name")
which(sim_rfs_Normal.Disease$groupID == quantile0.9)
quantile0.1 <- REquantile(Normal.Disease.Growth, quantile = 0.1, groupFctr = "Reef_Name")
which(sim_rfs_Normal.Disease$groupID == quantile0.1)
NormalDisease.by.Growth_quantile0.9 = data.frame(Tabular = rnorm(100000, mean=-3.1332 + 1.495773,sd=.1549),
Massive = rnorm(100000, mean=-3.8153 + 1.495773, sd = .1095),
Branching=rnorm(100000, mean=-3.5534 + 1.495773, sd = .1103))
NormalDisease.by.Growth_quantile0.9$Tabularbt = plogis(NormalDisease.by.Growth_quantile0.9$Tabular)
NormalDisease.by.Growth_quantile0.9$Massivebt = plogis(NormalDisease.by.Growth_quantile0.9$Massive)
NormalDisease.by.Growth_quantile0.9$Branchingbt = plogis(NormalDisease.by.Growth_quantile0.9$Branching)
NormalDisease.by.Growth_quantile0.9 = gather(NormalDisease.by.Growth_quantile0.9, Growth, Estimate, Tabularbt:Branchingbt)
NormalDisease.by.Growth_quantile0.1 = data.frame(Tabular = rnorm(100000, mean=-3.1332 - 1.689569,sd=.1549),
Massive = rnorm(100000, mean=-3.8153 - 1.689569, sd = .1095),
Branching=rnorm(100000, mean=-3.5534 - 1.689569, sd = .1103))
NormalDisease.by.Growth_quantile0.1$Tabularbt = plogis(NormalDisease.by.Growth_quantile0.1$Tabular)
NormalDisease.by.Growth_quantile0.1$Massivebt = plogis(NormalDisease.by.Growth_quantile0.1$Massive)
NormalDisease.by.Growth_quantile0.1$Branchingbt = plogis(NormalDisease.by.Growth_quantile0.1$Branching)
NormalDisease.by.Growth_quantile0.1 = gather(NormalDisease.by.Growth_quantile0.1, Growth, Estimate, Tabularbt:Branchingbt)
NormalDisease.by.Growth$ID = "average"
NormalDisease.by.Growth_quantile0.1$ID = "0.1quantile"
NormalDisease.by.Growth_quantile0.9$ID = "0.9quantile"
overall <- rbind(NormalDisease.by.Growth, NormalDisease.by.Growth_quantile0.1, NormalDisease.by.Growth_quantile0.9)
ggplot(aes(x = Estimate*100, col = ID), data = overall) +
geom_density(aes(y = ..scaled.., fill = Growth), alpha = 0.9, size = 1.3) +
scale_fill_brewer(palette="Spectral") +
#scale_fill_manual(values = c("#D55E00", "#009E73", "#0072B2")) +
scale_color_manual(values = c("#000000", "dodgerblue", "darkmagenta")) +
scale_x_continuous(limits = c(0, 10)) +
ylab("")
blogdown:::serve_site()
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
library(ggplot2)
library(lme4)
library(MASS)
library(tidyr)
#library(vegan)
library(zoo)
library(lsmeans)
library(MuMIn)
library(reshape)
library(plyr)
#library(ape)
# Load SE Function ----------------------------------------------------------------
SE = function(x)
{
sqrt(var(x,na.rm = T)/length(x))
}
# Load Data ----------------------------------------------------------------
Plastic = data.frame(read.table('~/Desktop/CoralReefs/FINALDATASET.csv', header = T, sep = ','))
# not used intitially
#PlasticWaste = data.frame(read.table('PlasticWaste.csv',header=T,sep=','))
TransectLengths = data.frame(read.table('~/Desktop/CoralReefs/TRANSECT_LENGTH_FINAL.csv',
header = T, sep = ','))
# Data Formatting ---------------------------------------------------------
#Create a summed dataset at the transect level while keeping track of plastic and disease presence jointly
SumNoPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==0),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
SumPlastic=aggregate(cbind(Healthy,WS,BBD,BrB,SEB,AtN,GA,Plastic)~Site_No+Tran+Reef_Name+Year+Sector+Country+Season+Group.Code+Trip.code,data=Plastic[which(Plastic$Plastic==1),],FUN='sum',drop=T,na.action = na.pass,na.rm=T)
colnames(SumPlastic)<- c('Site_No', 'Tran', 'Reef_Name','Year','Sector','Country', 'Season', 'Group.Code','Trip.code','Healthy.P','WS.P','BBD.P','BrB.P','SEB.P','AtN.P','GA.P','Plastic')
SummedPlastic<-merge(SumNoPlastic,SumPlastic,all=T)
TransectLengths$ID=paste(TransectLengths$Site.Name,TransectLengths$Transect)
SummedPlastic$ID=paste(SummedPlastic$Reef_Name,SummedPlastic$Tran)
SummedPlastic$T_length=TransectLengths$LIT.Transect.length_m[match(SummedPlastic$ID,TransectLengths$ID)]
SummedPlastic$Corals.NoPlastic=SummedPlastic$Healthy+SummedPlastic$WS+SummedPlastic$BBD+SummedPlastic$BrB+SummedPlastic$SEB+SummedPlastic$AtN+SummedPlastic$GA
SummedPlastic$Disease.NoPlastic=rowSums(SummedPlastic[,11:16],na.rm=T)
SummedPlastic$Plastic.Corals=rowSums(SummedPlastic[,17:23],na.rm=T)
SummedPlastic$Disease.Plastic=rowSums(SummedPlastic[,18:21],na.rm=T)
SummedPlastic$Sector=factor(SummedPlastic$Sector,levels = c('MYANMAR','KOH TAO','SULAWESI','BALI','PAPUA','PALMS','WH','KEPPELS'))
Plastic$ID<- paste(Plastic$Reef_Name,Plastic$Tran)
Plastic$T_length=TransectLengths$LIT.Transect.length_m[match(Plastic$ID,TransectLengths$ID)]
#Create summary tables to find mean levels of disease at the site level and find the minimum and maximum for the different sectors
summarydata=aggregate(cbind(Disease.NoPlastic/Corals.NoPlastic,Disease.Plastic/Plastic.Corals,Plastic/T_length/2*50)~Sector+Reef_Name,data = SummedPlastic,FUN='mean')
summarydata2=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='min')
summarydata3=aggregate(cbind(V1,V2)~Sector,data = summarydata,FUN='max')
blogdown:::serve_site()
Branch.Disease = glmer(Disease ~ Plastic + (1|Reef_Name),
data = Plastic[which(Plastic$Growth2=='Branching'),],
family = 'binomial',
control = glmerControl(optimizer ="bobyqa"))
blogdown:::serve_site()
