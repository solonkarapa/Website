geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5)
bananaindex %>% filter(entity == "Bananas")
banana_index %>% arrange(desc(land_use_kg))
banana_index %>% arrange(land_use_kg)
banana_index %>% arrange(land_use_kg) %>% head()
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1)
log(1)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = position_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
banana_index %>% mutate(y = 0 + rnorm(160, sd = 10)) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = post5ition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
#geom_jitter(position = post5ition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
#
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
theme_classic(base_size = 10)
?geom_hline
#
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..100g.protein.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
str(banana_index)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
#
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
#
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..land_use_1000kcal, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
colnames(banana_index)
# emission vs land use
ggplot(banana_index, aes(x = Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kca)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use
ggplot(banana_index, aes(x = Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
colnames(banana_index)
# emission vs land use 1
ggplot(banana_index, aes(x = Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Banana.index..land_use_100g_fat, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..land_use_1000kcal, y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
colnames(banana_index)
ggplot(banana_index, aes(x = Bananas.index..land_use_1000kcal, y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..1000.kcalories.)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
# emission vs land use 2
ggplot(banana_index, aes(x = Bananas.index..100g.protein., y = Bananas.index..land_use_100g_protein)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_text_repel(aes(label = entity),
size = 3.5) +
geom_hline(yintercept = 1) +
geom_vline(xintercept = 1) +
theme_classic(base_size = 10)
blogdown:::serve_site()
bananaindex <- read.csv("~/Desktop/Website/content/post/banana_index/bananaindex.csv")
View(bananaindex)
bananaindex <- read.csv("~/Desktop/Website/content/post/banana_index/bananaindex.csv")
colnames(bananaindex)
bananaindex %>% filter(entity == "Bananas")
bananaindex %>% mutate(mine_banana_kg = emissions_kg/X[1])
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
library(dplyr)
library(ggplot2)
library(ggrepel)
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
colnames(banana_index)
## plot land use
banana_index %>% arrange(land_use_kg) %>% head()
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..kg.), y = y, label = entity, size = emissions_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
## plot emissions
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..kg.), y = y, label = entity, size = emissions_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
emissions_kg
banana_index %>% filter(entity == "Beef burger")
banana_index %>% filter(entity == "Beef mince")
banana_index %>% filter(entity == "strawberries")
banana_index %>% filter(entity == "strawberry")
unique(banana_index$entity)
banana_index %>% filter(entity == "Strawberries")
banana_index$Banana.values
banana_index$X
banana_index %>% filter(entity == "Beef burger")
53.97/0.88
53.97/0.88
blogdown:::preview_site()
library(dplyr)
library(ggplot2)
library(ggrepel)
bananaindex <- read.csv("~/Desktop/Website/content/post/banana_index/bananaindex.csv")
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
## plot land use
banana_index %>% arrange(land_use_kg) %>% head()
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light()
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "")
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light()
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light() +
theme(axis.ticks.y=element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_linedraw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_void() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_test() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, color = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
nrow(banana_index)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% filter(str_detect(entity, "Beef$"))
library(stringr)
banana_index %>% filter(str_detect(entity, "Beef$"))
banana_index %>% filter(str_detect(entity, "Beef"))
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg)
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
colnames(banana_index)
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_1000kcal), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kcal") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_100g_protein), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
