banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
colnames(banana_index)
## plot land use
banana_index %>% arrange(land_use_kg) %>% head()
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..kg.), y = y, label = entity, size = emissions_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
## plot emissions
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..kg.), y = y, label = entity, size = emissions_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
emissions_kg
banana_index %>% filter(entity == "Beef burger")
banana_index %>% filter(entity == "Beef mince")
banana_index %>% filter(entity == "strawberries")
banana_index %>% filter(entity == "strawberry")
unique(banana_index$entity)
banana_index %>% filter(entity == "Strawberries")
banana_index$Banana.values
banana_index$X
banana_index %>% filter(entity == "Beef burger")
53.97/0.88
53.97/0.88
blogdown:::preview_site()
library(dplyr)
library(ggplot2)
library(ggrepel)
bananaindex <- read.csv("~/Desktop/Website/content/post/banana_index/bananaindex.csv")
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
## plot land use
banana_index %>% arrange(land_use_kg) %>% head()
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("BANANA INDEX; Land use") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light()
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "")
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light()
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light() +
theme(axis.ticks.y=element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_linedraw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_void() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_test() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, color = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index - Land Use)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
nrow(banana_index)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = Bananas.index..land_use_kg, y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "log(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% filter(str_detect(entity, "Beef$"))
library(stringr)
banana_index %>% filter(str_detect(entity, "Beef$"))
banana_index %>% filter(str_detect(entity, "Beef"))
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg)
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
colnames(banana_index)
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_1000kcal), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kcal") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_100g_protein), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
library(dplyr)
library(ggplot2)
library(ggrepel)
library(stringr)
bananaindex <- read.csv("~/Desktop/Website/content/post/banana_index/bananaindex.csv")
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
banana_index %>% filter(str_detect(entity, "Banana"))
banana_index %>% filter(str_detect(entity, "Bananas"))
banana_index %>% filter(str_detect(entity, "Sugar"))
2.639824/2.153669
2.153669/2.639824
0.5394686/2.717877
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kg") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_1000kcal), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by kcal") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_100g_protein), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% filter(str_detect(entity, "Sugar"))
banana_index %>% filter(str_detect(entity, "Bananas"))
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = Bananas.index..land_use_100g_protein, y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = Bananas.index..land_use_100g_protein, y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_1000kcal), y = y, label = entity, size = land_use_1000kcal)) +
geom_point() +
ggtitle("Land use by kcal") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use per kcal", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_100g_protein), y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = Bananas.index..land_use_100g_protein, y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
log(1)
banana_index %>% filter(entity == "Prawns")
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = Bananas.index..land_use_100g_protein, y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
blogdown:::serve_site()
banana_index %>% filter(entity == "Sugar")
banana_index %>% mutate(sd = sd(Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein))
library(tidyr)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
data_long <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key=TRUE)
str(data_long)
160*3
data_long %>%
group_by(entity) %>%
mutate(variability = sd(measurement))
data_long %>%
group_by(entity) %>%
mutate(variability = sd(measurement)) %>%
ggplot(.) +
geom_point(aes(x = variability, y = entity))
data_long %>%
group_by(entity) %>%
mutate(variability = sd(measurement))
ggplot(data_long) +
?geom_text_repel
geom_text_repel(data = data_long %>% filter(variability > 20, aes(x = variability, y = entity, lable = entity), size = 3.5)
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% filter(variability > 20), aes(x = variability, y = entity, lable = entity), size = 3.5)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
data_long <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(variability = sd(measurement))
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% filter(variability > 20), aes(x = variability, y = entity, lable = entity), size = 3.5)
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% filter(variability > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
?distinct
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% distinct(entity, .keep_all = T) %>% filter(variability > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
data_long <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(variability = mean(measurement))
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% distinct(entity, .keep_all = T) %>% filter(variability > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
data_long <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(variability = sd(measurement))
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% distinct(entity, .keep_all = T) %>% filter(variability > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
data_long <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(variability = var(measurement))
ggplot() +
geom_point(data = data_long, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long %>% distinct(entity, .keep_all = T) %>% filter(variability > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
str(banana_index)
data_long2 <- gather(banana_index, index, measurement, Bananas.index..kg.:Bananas.index..100g.protein., factor_key = TRUE) %>%
group_by(entity) %>%
mutate(variability = var(measurement))
ggplot() +
geom_point(data = data_long2, aes(x = variability, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(variability > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
data_long2 <- gather(banana_index, index, measurement, Bananas.index..kg.:Bananas.index..100g.protein., factor_key = TRUE) %>%
group_by(entity) %>%
mutate(variability1 = min(measurement))
data_long2 <- gather(banana_index, index, measurement, Bananas.index..kg.:Bananas.index..100g.protein., factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = diff, y = entity, label = entity), size = 3.5)
range(data_long2$diff)
data_long2 %>% filter(str_detect(entity, "Beef"))
data_long2 %>% filter(str_detect(entity, "Beef")) %>% select(Bananas.index..kg.:Bananas.index..100g.protein.,)
data_long2 %>% filter(str_detect(entity, "Beef")) %>% select(Bananas.index..kg.:Bananas.index..100g.protein.)
data_long2 %>% filter(str_detect(entity, "Beef")) %>% select(min_index, max_index)
data_long2 %>% filter(str_detect(entity, "Beef")) %>% select(measurement, min_index, max_index)
data_long2 %>% filter(str_detect(entity, "Beef")) %>% select(measurement, min_index, max_index, index)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
data_long <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
ggplot() +
geom_point(data = data_long, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = variability, y = entity, label = entity), size = 3.5)
ggplot() +
geom_point(data = data_long, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = diff, y = entity, label = entity), size = 3.5)
data_long %>% filter(str_detect(entity, "Beef")) %>% select(measurement, min_index, max_index, index)
banana_index%>% filter(str_detect(entity, "Beef"))
