labs(x = "ln(Banana Index)", size = "Land use by kg", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_1000kcal), y = y, label = entity, size = land_use_1000kcal)) +
geom_point() +
ggtitle("Land use by calorie count") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use per kcal", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_100g_protein), y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
data_long2 <- gather(banana_index, index, measurement, Bananas.index..kg.:Bananas.index..100g.protein., factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
data_long2 %>% filter(str_detect(entity, "Beef steak")) %>% select(measurement, min_index, max_index, index, diff)
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity, col = index)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = diff, y = entity, label = entity), size = 3.5)
banana_index %>% filter(str_detect(entity, "Beef steak")) %>%
rename(BI_emissions_kg = Bananas.index..kg.,
BI_emissions_calories = Bananas.index..1000.kcalories.,
BI_emissions_protein = Bananas.index..100g.protein.) %>%
select(BI_emissions_kg:BI_emissions_protein)
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = diff, y = entity, label = entity), size = 3.5) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = diff, y = entity, label = entity), size = 3.5) +
labs(x = "Banana Index Range", y = "")
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 20), aes(x = diff, y = entity, label = entity), size = 3.5) +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > 15), aes(x = diff, y = entity, label = entity), size = 3.5) +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
data_long3 <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > 15), aes(x = diff, y = entity, label = entity), size = 3.5) +
ggtitle("Land use") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
?geom_vline
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = 0, linetype = "dashed") +
ggtitle("Land use") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
th <- 15
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = 0, linetype = "dashed") +
ggtitle("Land use") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Land use") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
th <- 15
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
ggtitle("Emissions") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Emissions") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
data_long3 <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Land use") +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
?coord_cartesian
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Emissions") +
coord_cartesian(xlim = (0, 150)) +
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Emissions") +
coord_cartesian(xlim = (0, 150)) +
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Emissions") +
coord_cartesian(xlim = c(0, 150)) +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Land use") +
coord_cartesian(xlim = c(0, 150)) +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
?min
str(banana_index)
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg), label = entity) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
#geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
blogdown:::serve_site()
blogdown:::serve_site()
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
library(dplyr)
library(ggplot2)
library(ggrepel)
library(stringr)
library(tidyr)
bananaindex <- read.csv("~/Desktop/Website/content/post/banana_index/bananaindex.csv")
banana_index <- bananaindex %>% mutate(
Bananas.index..100g_fat = emissions_100g_fat/20.46922,
Bananas.index..land_use_kg = land_use_kg/2.639824,
Bananas.index..land_use_1000kcal = land_use_1000kcal/2.717877,
Bananas.index..land_use_100g_protein = Land.use.per.100.grams.of.protein/22.82123,
Banana.index..land_use_100g_fat = Land.use.per.100.grams.of.fat/64.90734
)
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_kg), y = y, label = entity, size = land_use_kg)) +
geom_point() +
ggtitle("Land use by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by kg", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>% filter(str_detect(entity, "Beef")) %>%
select(entity,  Bananas.index..land_use_kg) %>%
rename(BI_land_use_kg = Bananas.index..land_use_kg) %>%
arrange(desc(BI_land_use_kg))
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_1000kcal), y = y, label = entity, size = land_use_1000kcal)) +
geom_point() +
ggtitle("Land use by calorie count") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use per kcal", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(100)
dev <- rnorm(160, sd = 10)
banana_index %>% mutate(y = 0 + dev) %>%
ggplot(., aes(x = log(Bananas.index..land_use_100g_protein), y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
geom_point() +
ggtitle("Land use by protein content") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "ln(Banana Index)", size = "Land use by protein", y = "") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 0) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
#set.seed(100)
#dev <- rnorm(160, sd = 10)
#banana_index %>% mutate(y = 0 + dev) %>%
#   ggplot(., aes(x = Bananas.index..land_use_100g_protein, y = y, label = entity, size = Land.use.per.100.grams.of.protein)) +
#   geom_point() +
#   ggtitle("Land use by protein content") +
#   #geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
#   labs(x = "ln(Banana Index)", size = "Land use by 100g protein", y = "") +
#   geom_text_repel(size = 3.5) +
#   geom_vline(xintercept = 1) +
#   theme_classic() +
#   theme(axis.text.y = element_blank(),
#         axis.ticks.y = element_blank())
data_long2 <- gather(banana_index, index, measurement, Bananas.index..kg.:Bananas.index..100g.protein., factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
th <- 10
ggplot() +
geom_point(data = data_long2, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long2 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Emissions") +
coord_cartesian(xlim = c(0, 150)) +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
data_long3 <- gather(banana_index, index, measurement, Bananas.index..land_use_kg:Bananas.index..land_use_100g_protein, factor_key = TRUE) %>%
group_by(entity) %>%
mutate(min_index = min(measurement),
max_index = max(measurement),
diff = max_index - min_index)
ggplot() +
geom_point(data = data_long3, aes(x = diff, y = entity)) +
geom_text_repel(data = data_long3 %>% distinct(entity, .keep_all = T) %>% filter(diff > th), aes(x = diff, y = entity, label = entity), size = 3.5) +
geom_vline(xintercept = th, linetype = "dashed") +
ggtitle("Land use") +
coord_cartesian(xlim = c(0, 150)) +
labs(x = "Banana Index Range", y = "") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
str(banana_index)
banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
geom_smooth() +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p2 <- banana_index %>%
ggplot(., aes(x =  Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal, label = entity)) +
geom_point() +
geom_smooth() +
ggtitle("BI by calories") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p2
?geom_smooth
p2
?geom_abline
p2 <- banana_index %>%
ggplot(., aes(x =  Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal, label = entity)) +
geom_point() +
geom_smooth(se = F) +
ggtitle("BI by calories") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p2
str(banana_index)
p3 <- banana_index %>%
ggplot(., aes(x =  Bananas.index..100g.protein., y = Bananas.index..land_use_100g_protein, label = entity)) +
geom_point() +
geom_smooth(se = F) +
ggtitle("BI by protein") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p2
p3
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
library(ggpubr)
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
p1 <- banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
geom_smooth(se = TRUE) +
ggtitle("BI by weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "Banana Index Emissions", y = "Banana Index Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
blogdown:::serve_site()
?ggarrange
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3, vjust = 1.5)
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3, vjust = 4)
p1 <- banana_index %>%
ggplot(., aes(x = Bananas.index..kg., y = Bananas.index..land_use_kg, label = entity)) +
geom_point() +
geom_smooth(se = TRUE) +
ggtitle("Weight") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "BI Emissions", y = "BI Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p2 <- banana_index %>%
ggplot(., aes(x =  Bananas.index..1000.kcalories., y = Bananas.index..land_use_1000kcal, label = entity)) +
geom_point() +
geom_smooth(se = F) +
ggtitle("Calories") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "BI Emissions", y = "BI Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p3 <- banana_index %>%
ggplot(., aes(x =  Bananas.index..100g.protein., y = Bananas.index..land_use_100g_protein, label = entity)) +
geom_point() +
geom_smooth(se = F) +
ggtitle("Protein") +
#geom_jitter(position = postition_jitter(width = 0, height = 0.001)) +
labs(x = "BI Emissions", y = "BI Land use") +
geom_text_repel(size = 3.5) +
geom_vline(xintercept = 1) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
library(ggpubr)
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3, vjust = 4)
ggarrange(p1, p2, p3,
ncol = 1, nrow = 3)
ggarrange(p1, p2, p3,
ncol = 2, nrow = 2)
ggarrange(p3,                                                 # First row with scatter plot
ggarrange(p1, p2, ncol = 2), # Second row with box and dot plots
nrow = 2                                      # Labels of the scatter plot
)
ggarrange(ggarrange(p1, p2, ncol = 2),
p3,                                                 # First row with scatter plo, # Second row with box and dot plots
nrow = 2                                      # Labels of the scatter plot
)
ggarrange(p1, p2, p3,
ncol = 2, nrow = 2)
install.packages("blogdown")
library(blogdown)
blogdown:::serve_site()
